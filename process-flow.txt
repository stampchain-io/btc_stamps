

flow:

follow(db) ->
 purge_old_block_tx_db(db) ->
  get_issuances_by_block(current_index) # cp node call->
    get_block_count() ->
      get_issuances( cp api query)
  get_stamp_issuances( parse for stamp only trx)
  check_for_reog / rollback / purge_block_db
  parse_block() --  ln 826 in blocks.py  to ln 115
    for tx in txes - ln 136 in blocks.py ( NO TX HERE YET )
      parse_tx() ## only used if tx are already in current block being parsed
  insert into blocks table ln 826 in blocks.py
  
  for tx_hash_in txhash_list (gotten from backend.get_tx_list(cblock))
    filter cp issuances by tx hash to matchs against tx_hash
    get tx_hex from raw_transactions(tx_hash) 
    list_tx(db, block_hash, block_index, block_time, tx_hash, tx_index, tx_hex, stamp_issuance=stamp_issuance)
       select from transactions table by tx_hash (matching tx_hash from backend.get_tx_list)
       get raw tx hex from hash AGAIN!  -----
       get_tx_info (keyburn, source, dest, decoded_tx(src-20))
       if source, data, dest, or stamp_issuance
       if stamp_issuance is not none, set data,source,dest from CP values
       insert into transactinos table (all transactions here with only CP data)
  commit to block

  ## now we update_stamp table and iterate through tx again!! no bueno.
  update_stamp_table
    get_stamps_without_validation  # parse transactions table which have 'data' including CP
    parse_stamps_to_stamp_table(db, stamps_without_validation) # write to stamptablev4
    update_parsed_block


# parse transactions table for data column in this block, write to stv4, update blocks to parsed=1

`update_stamp_table`