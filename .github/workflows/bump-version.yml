name: Bump version
on:
  push:
    branches:
      - dev
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bump2version

      - name: Bump version and create tag
        id: bump_version_patch
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            bump2version patch
          else
            bump2version build
          fi
          echo "NEW_VERSION=$(bump2version --dry-run --list patch | grep current_version | sed -r s,'^.*=',,)" >> $GITHUB_ENV

      - name: Bump version and create tag
        id: bump_version_build
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            bump2version --no-tag release
          else
            bump2version --no-tag build
          fi
          echo "NEW_VERSION=$(bump2version --dry-run --list build | grep current_version | sed -r s,'^.*=',,)" >> $GITHUB_ENV

      - name: Push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Bump version to ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}
          git push origin HEAD:${{ github.ref }}
          git push origin --tags

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          body: |
            Changes in this Release
            - Auto-generated release from GitHub Actions
          draft: false
          prerelease: ${{ github.ref == 'refs/heads/dev' }}
