name: Bump version
on:
  push:
    branches:
      - dev
      - main
  pull_request:
    types: [closed]
    branches:
      - dev
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)) && (github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main')
    permissions:
      contents: write
      packages: write
    env:
      GIT_USER_NAME: GitHub Action
      GIT_USER_EMAIL: action@github.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Check if last commit was made by GitHub Actions
        id: check_user
        run: |
          if git log -1 --pretty=format:'%ae' | grep -q "${{ env.GIT_USER_EMAIL }}"; then
            echo "Last commit was made by GitHub Actions. Skipping workflow."
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "Last commit was not made by GitHub Actions. Running workflow."
            echo "skip=false" >> $GITHUB_ENV
          fi

      - name: Set up Python
        if: env.skip == 'false'
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        if: env.skip == 'false'
        run: |
          python -m pip install --upgrade pip
          pip install bump2version

      - name: Configure Git
        if: env.skip == 'false'
        run: |
          git config --global user.email "${{ env.GIT_USER_EMAIL }}"
          git config --global user.name "${{ env.GIT_USER_NAME }}"
          git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }}.git
    
      - name: Get current commit hash
        if: env.skip == 'false'
        id: get_commit
        run: echo "hash=$(git rev-parse HEAD)" >> $GITHUB_ENV
      
      - name: Bump version for dev branch
        if: env.skip == 'false' && github.ref == 'refs/heads/dev'
        run: |
          bump2version --verbose build
          echo "NEW_VERSION=$(cat VERSION)" >> $GITHUB_ENV
      
      - name: Bump version for main branch
        if: env.skip == 'false' && github.ref == 'refs/heads/main'
        run: |
          bump2version minor --serialize "v{major}.{minor}.{patch}"
          echo "NEW_VERSION=$(cat VERSION)" >> $GITHUB_ENV
      
      - name: Push changes
        if: env.skip == 'false'
        run: |
          if [ "$(git rev-parse HEAD)" != "${{ env.hash }}" ]; then
            git push origin HEAD:${{ github.ref }}
            git push origin --tags
          else
            echo "No new commit created."
          fi

      - name: Create Release
        if: env.skip == 'false'
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: Release ${{ env.NEW_VERSION }}
          generate_release_notes: True
          body: |
            Changes in this Release:
          append_body: True
          draft: false
          prerelease: ${{ github.ref == 'refs/heads/dev' }}