name: Bump version
on:
  push:
    branches:
      - dev
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      GIT_USER_NAME: GitHub Action
      GIT_USER_EMAIL: action@github.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bump2version

      - name: Configure Git
        run: |
          git config --global user.email "${{ env.GIT_USER_EMAIL }}"
          git config --global user.name "${{ env.GIT_USER_NAME }}"

      - name: Bump version for dev branch
        if: github.ref == 'refs/heads/dev'
        run: |
          bump2version build
          echo "NEW_VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Bump version for main branch
        if: github.ref == 'refs/heads/main'
        run: |
          bump2version minor --serialize "v{major}.{minor}.{patch}"
          echo "NEW_VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Push changes
        run: |
          if git diff --quiet; then
            echo "No changes to commit."
          else
            git commit -am "Bump version to ${{ env.NEW_VERSION }}" --author="GitHub Action <action@github.com>"
            git tag ${{ env.NEW_VERSION }}
            git push origin HEAD:${{ github.ref }}
            git push origin --tags
          fi

      - name: Create Release
        id: create_release
        uses: elgohr/Github-Release-Action@20231116201936
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          body: |
            Changes in this Release
            - Auto-generated release from GitHub Actions
          draft: false
          prerelease: ${{ github.ref == 'refs/heads/dev' }}
