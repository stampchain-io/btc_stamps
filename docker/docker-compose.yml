
services:
  db:
    image: mysql:8.4.0
    platform: ${DOCKER_PLATFORM}
    volumes:
      - ./db_data:/var/lib/mysql
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ../indexer/table_schema.sql:/docker-entrypoint-initdb.d/table_schema.sql
    restart: always
    env_file:
      - .env.mysql
    # environment:
    #   - MYSQL_DATABASE=${RDS_DATABASE:-btc_stamps}
    command: --bind-address=0.0.0.0 --innodb_data_file_path=ibdata1:10M:autoextend
    ports:
      - "3306:3306"

  # adminer:
  #   image: adminer:4.8.1
  #   restart: always
  #   ports:
  #     - "3030:8080"

  # grafana:
  #   image: grafana/grafana:10.2.3
  #   depends_on:
  #     - db
  #   ports:
  #     - "3333:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   env_file:
  #     - .env.grafana

  indexer:
    build: 
      context: ../indexer
      dockerfile: Dockerfile
      args:
         PYTHON_VERSION: 3.12
    command: sh -c "dockerize -wait tcp://db:3306 -timeout 5m && poetry run indexer"
    volumes:
      - ../indexer:/usr/src/app
      - ../files:/usr/src/app/files
    depends_on:
      - db
    env_file:
      - ../indexer/.env
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'poetry run indexer' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    extra_hosts:
      - "host.docker.internal:host-gateway"
  app:
    build:
      context: ../app
    volumes:
      - ../files:/app/static/stamps
    ports:
      - "8080:8000"
    depends_on:
      - db
    env_file:
      - ../app/.env
      

volumes:
  db_data:
  grafana_data:
  files:
