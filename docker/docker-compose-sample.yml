version: '3.8'

services:
  db:
    image: mysql:latest
    platform: ${DOCKER_PLATFORM}
    volumes:
      - ./db_data:/var/lib/mysql
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ../indexer/table_schema.sql:/docker-entrypoint-initdb.d/table_schema.sql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD:
      MYSQL_DATABASE: btc_stamps
      MYSQL_USER:
      MYSQL_PASSWORD: 
      GRAFANA_USER:
      GRAFANA_PASSWORD: 
    command: --bind-address=0.0.0.0 --innodb_data_file_path=ibdata1:10M:autoextend
    ports:
      - "3306:3306"

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - db
    ports:
      - "3333:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=
      - GF_USERS_ALLOW_SIGN_UP=false

  indexer:
    build: .
    command:  dockerize -wait tcp://db:3306 -timeout 5m python3 start.py
    volumes:
      - ../indexer:/usr/src/app
      - ../files:/usr/src/app/files
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - RDS_HOSTNAME=db
      - RDS_USER=
      - RDS_PASSWORD=
      - RDS_DATABASE=btc_stamps
      - QUICKNODE_URL= # Optional - only for Quicknode users do not include https://
      - RPC_USER=rpc
      - RPC_PASSWORD=rpc
      - RPC_TOKEN= # Optional - only for Quicknode users
      - BLOCKS_TO_KEEP=0 # Optional to purgue historic txs from db - keep all with 0
      - BACKEND_POLL_INTERVAL= # Optional to change the interval of the backend polling default 0.5 secs
      - DOMAINNAME= # Optional to prepend the stamp_url value in the db ie https://stampchain.io
      - AWS_ACCESS_KEY_ID= # Optional - only for AWS S3 users
      - AWS_SECRET_ACCESS_KEY= # Optional - only for AWS S3 users
      - AWS_CLOUDFRONT_DISTRIBUTION_ID= # Optional if using Cloudfront with S3 and require invalidation
      - AWS_S3_BUCKET_NAME= # Optional - only for AWS S3 users
      - AWS_S3_IMAGE_DIR= # Optional - only for AWS S3 users
      - AWS_RDS_HOSTNAME= # Optional - only for AWS RDS users

  app:
    build:
      context: ../app
    volumes:
      - ../files:/app/static/content
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - DATABASE_URL=mysql://RDS_USER:RDS_PASSWORD@db:3306/RDS_DATABASE
      # Otras variables de entorno necesarias
volumes:
  db_data:
  grafana_data:
  files:
